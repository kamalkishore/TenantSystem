@model TenantSystem.Models.TenantMeterReading

@{
    ViewBag.Title = "AddTenantMeterReading";
}

<h2>AddTenantMeterReading</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>TenantMeterReading</legend>
                
        <div class="editor-label">
            @Html.LabelFor(model => model.DateOfMeterReading)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateOfMeterReading)
            @Html.ValidationMessageFor(model => model.DateOfMeterReading)
        </div>

        <div class="editor-label">
            @Html.Label("Tenant")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TenantId", (IEnumerable<SelectListItem>)ViewBag.Tenant, "Select")
            @Html.ValidationMessageFor(model => model.TenantId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MeterId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MeterId)
            @Html.ValidationMessageFor(model => model.MeterId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model=>model.PerUnitPrice)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model=>model.PerUnitPrice,(SelectList)ViewBag.PricePerUnit, "Select")
            @Html.ValidationMessageFor(model=>model.PerUnitPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MeterReading)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MeterReading)
            @Html.ValidationMessageFor(model => model.MeterReading)
        </div>


        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $.ready(function () {
        alert("working");
        $('#MeterReading').on('change', function (e) {
            var perUnit = $('#PricePerUnit').val();
            var meterReading = $('#MeterReading').val();

            if (!isNaN(perUnit) && (!isNaN(meterReading)))
            { alert(perUnit * meterReading); }
        });

    });
</script>